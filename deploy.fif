#!/bin/env -S fift -s

"Asm.fif" include
"TonUtil.fif" include
"lib.fif" include


".data/key1.pk" load-generate-keypair nip constant key1
".data/key2.pk" load-generate-keypair nip constant key2
".data/key3.pk" load-generate-keypair nip constant key3

<{ SETCP0 ACCEPT "code.fif" include PUSHREF SETCODE }>c constant code
<b 1 32 u, key3 priv>pub B, key1 priv>pub B, b{0} s, key2 priv>pub B, b{0} s, b> constant state
<b b{0011} s, code ref, state ref, dictnew dict, b> constant stateinit
0 stateinit hashu 2constant address


1        constant seqno
address 2constant dest
1        constant grams

<b b{1000100} s,
	dest addr,
	grams Gram,
b{00} s, b> constant outmsg

seqno now 300 + 1 outmsg contract-order  constant order
seqno now 300 +          contract-cancel constant cancel


order  key1 address contract-sign constant key1order
order  key2 address contract-sign constant key2order
order  key3 address contract-sign constant key3order
cancel key1 address contract-sign constant key1cancel
cancel key2 address contract-sign constant key2cancel
cancel key3 address contract-sign constant key3cancel


// ".data/wallet-stateinit.boc" file>B B>boc
// <s ref@+ swap ref@ swap
// order key3 test-address contract-sign
// <s -1 rot <s 10000 test-run
// 2drop <s csr. true abort""


{
	<b b{1000100} s, address addr, 0 Gram, b{00} s, swap <s s, b>
	2 boc+>B over B>file
	."lite-client -c 'sendfile " type ."' -C .data/testnet.config" cr
} : boc-instruction


<b b{1000100} s, address addr, b{000010} s,
	stateinit <s s, b{0} s,
b> 2 boc+>B ".data/wallet-new.boc" B>file

cr
."lite-client -c 'last' -c 'saveaccount .data/wallet-stateinit.boc " address 7 smca>$ type ."' -C .data/testnet.config" cr
."lite-client -c 'last' -c 'getaccount " address 7 smca>$ type ."' -C .data/testnet.config" cr
."lite-client -c 'sendfile .data/wallet-new.boc' -C .data/testnet.config" cr

cr
".data/wallet-key1order"  seqno (.) $+ ".boc" $+ key1order  boc-instruction
".data/wallet-key2order"  seqno (.) $+ ".boc" $+ key2order  boc-instruction
".data/wallet-key3order"  seqno (.) $+ ".boc" $+ key3order  boc-instruction

cr
".data/wallet-key1cancel" seqno (.) $+ ".boc" $+ key1cancel boc-instruction
".data/wallet-key2cancel" seqno (.) $+ ".boc" $+ key2cancel boc-instruction
".data/wallet-key3cancel" seqno (.) $+ ".boc" $+ key3cancel boc-instruction
