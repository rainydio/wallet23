#!/bin/env -S fift -s

"Asm.fif" include
"TonUtil.fif" include
"GetOpt.fif" include
"lib.fif" include

{
	1 pick null? { false } { 1 pick 1 pick $= } cond
	-rot drop drop
} : $=?

1 $() constant keyfile { keyfile null? not } : keyfile?

2 $() constant cmd
cmd "transfer" $=? { 3 $() } { null } cond constant cmd-transfer-destination-address
cmd "transfer" $=? { 4 $() } { null } cond constant cmd-transfer-amount
cmd "transfer" $=? { 5 $() } { null } cond constant cmd-transfer-comment
cmd "replace-key" $=? { 3 $() } { null } cond constant cmd-replace-key-keyfile


keyfile? { keyfile load-keypair } { null null } cond constant keypriv constant keypub
"wallet-address.addr" load-address 2constant address
cr

{
	dup <s empty? {
		drop "cancelation"
	} {
		<s 2 u@+ nip 1 i@+ 6 u@+ nip 8 i@+ 256 u@+ Gram@
		2 pick address drop = 2 pick address nip = and {
			{ drop } 4 times "change key (only checked if message to self)"
		} {
			"transfer " swap (.GR) $+ "GR$ to " $+ 3 -roll rot 7 swap - smca>$ $+
		} cond
	} cond
} : msg-description


"wallet-state.boc" file>B B>boc <s
ref@+ constant code
ref@  constant root

root root-seqno     constant seqno
root root-last-msg  constant last-msg
root root-last-key  constant last-key
root root-third-key constant third-key
root root-prev-key  constant prev-key
root root-prev-msg  constant prev-msg

keypub null? { null } {
	root keypub root-key-msg
} cond constant key-msg

address 7 smca>$ type ." "
keyfile null? {
	keyfile type ." "
	keypub last-key B= { ."(last) "} if
	keypub prev-key B= { ."(prev) "} if
	keypub third-key B= { ."(third) "} if
} ifnot
."#" seqno (.) type .":" cr

last-msg null? { ."  - no orders" cr } if
last-msg null? not {
	."  - " last-msg msg-description type
	last-key keypub B= {
		." (by you, waiting for confirmation)"
	} {
		." (waiting for confirmation)"
	} cond
	cr
} if
prev-msg null? not {
	."  - " prev-msg msg-description type
	prev-key keypub B= {
		." (by you, waiting for confirmation)"
	} {
		." (waiting for confirmation)"
	} cond
	cr
} if
cr

keyfile? {
	last-msg null? not
	last-key keypub B= not and {
		."confirm" cr
		."  confirm (last) " last-msg msg-description type cr
		cr
	} if

	prev-msg null? not
	prev-key keypub B= not and {
		."confirm-prev" cr
		."  confirm (previous) " prev-msg msg-description type cr
		cr
	} if

	last-msg null? not
	key-msg null? and {
		."cancel" cr
		."  create request to cancel pending orders" cr
		cr
	} if

	key-msg null? {
		."transfer <destination address> <amount> <comment>" cr
		."  create request to transfer <amount> GR$ to <destination address>" cr
		cr

		."replace-key <new key file>" cr
		."  create request to change key that can access contract from " keyfile type ." to <new key file>" cr
		cr
	} if
} if
