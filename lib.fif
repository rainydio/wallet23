"Asm.fif" include
"TonUtil.fif" include

{
	$>B crc16 0x10000 or
} : $>id

{
	dict,
} : nullref,

{
	1 u@+ swap { ref@+ swap } { null swap } cond
} : nullref@+

{
	nullref@+ drop
} : nullref@

{
	dup null? { drop null? } {
		over null? { nip null? } {
			hashu swap hashu =
		} cond
	} cond
} : nullref=

{
	2dup <s s-fits? {
		swap false 1 u, swap <s s,
	} {
		swap true 1 u, swap ref,
	} cond
} : body,

{
	1 u@+ swap { ref@+ swap } { s>c } cond
} : body@

{
	dup null? { drop null? } {
		over null? { nip null? } {
			B=
		} cond
	} cond
} : nullB=

{
	<s
		32 u@+ drop
} : seqno

{
	<s
		32 u@+ nip
		nullref@+ nip
		32 B@+ 32 B@+ 32 B@+ drop

	2dup Bcmp -1 = { swap } if rot
	2dup Bcmp -1 = { swap } if -rot
	2dup Bcmp 1 = { swap } if
} : keys

{
	<s
		32 u@+ nip
		nullref@+ drop
} : last_request

{ last_request null? not } : last_request?

{
	dup last_request? {
		<s
			32 u@+ nip
			nullref@+ nip
			32 B@+ drop
	} { drop null } cond
} : last_request_key

{ last_request_key null? not } : last_request_key?
{ last_request_key nullB= } : last_request_key=

{
	<s
		32 u@+ nip
		nullref@+ nip
		32 B@+ nip
		32 B@+ nip
		32 B@+ nip
		nullref@+ drop
} : prev_request

{
	prev_request null? not
} : prev_request?

{
	dup prev_request? {
		<s
			32 u@+ nip
			nullref@+ nip
			32 B@+ nip
			32 B@+ nip
			32 B@+ drop
	} { drop null } cond
} : prev_request_key

{ prev_request_key null? not } : prev_request_key?
{ prev_request_key nullB= } : prev_request_key=

{
	2dup last_request_key= {
		nip last_request
	} {
		2dup prev_request_key= {
			nip prev_request
		} {
			2drop null
		} cond
	} cond
} : my_request

{ my_request null? not } : my_request?

{
	2dup my_request? {
		2dup last_request_key= {
			nip prev_request
		} {
			nip last_request
		} cond
	} {
		dup prev_request? {
			nip prev_request
		} {
			nip last_request
		} cond
	} cond
} : other_request1

{ other_request1 null? not } : other_request1?

{
	2dup my_request? {
		2dup last_request_key= {
			nip prev_request_key
		} {
			nip last_request_key
		} cond
	} {
		dup prev_request? {
			nip prev_request_key
		} {
			nip last_request_key
		} cond
	} cond
} : other_request1_key

{ other_request1_key null? not } : other_request1_key?
{ other_request1_key nullB= } : other_request1_key=

{
	2dup my_request? {
		2drop null
	} {
		dup prev_request? {
			nip last_request
		} {
			2drop null
		} cond
	} cond
} : other_request2

{ other_request2 null? not } : other_request2?

{
	2dup my_request? {
		2drop null
	} {
		dup prev_request? {
			nip last_request_key
		} {
			2drop null
		} cond
	} cond
} : other_request2_key

{ other_request2_key null? not } : other_request2_key?
{ other_request2_key nullB= } : other_request2_key=
