#!/bin/env -S fift -s

"TonUtil.fif" include
"../lib.fif" include

$# 0 = {
	."fift -s " $0 type ." <private key file> <other_request1|other_request2>" cr
	."  create confirmation for <other_request1|other_request2> signed by private key stored in <private key file>" cr
	."  contract data cell has to be downloaded from blockchain first" cr
	cr
	."files:" cr
	."  contract-address.addr - contract address input" cr
	."  contract-data.boc - contract data cell input" cr
	."  msg-confirmation.boc - external message output" cr

	100 halt
} if

$1 load-keypair nip
constant private_key

$2
constant selector

"contract-address.addr" load-address
2constant contract_address

"contract-data.boc" file>B B>boc
constant contract_data

now 60 +
constant valid_until

"other_request1" selector $= { private_key priv>pub contract_data other_request1 } if
"other_request2" selector $= { private_key priv>pub contract_data other_request2 } if
constant confirmation

<b
	contract_data seqno 32 u,
	valid_until 32 u,
	confirmation ref,
b> constant payload

<b
	b{100} s,
	contract_address addr,
	payload <s s,
b> hashu constant signed_hash

signed_hash private_key ed25519_sign_uint
constant signature

<b
	signature B,
	payload <s s,
b> constant body

<b
	b{1000100} s,
	contract_address addr,
	0 Gram,
	b{00} s,
	body <s s,
b> constant msg_confirmation

msg_confirmation 2 boc+>B dup "msg-confirmation.boc" B>file
