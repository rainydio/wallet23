#!/bin/env -S fift -s

"TonUtil.fif" include
"lib.fif" include

$# 0 = {
	."fift -s " $0 type ." <private key file> <new private key file>" cr
	."  create new request to replace public key stored in <private key file> with one stored in <new private key file>" cr
	."  <new private key file> is generated if it doesn't exist" cr
	."  contract data cell has to be downloaded from blockchain first" cr
	cr
	."files:" cr
	."  contract-address.addr - contract address input" cr
	."  contract-data.boc - contract data cell input" cr
	."  msg-replace-key.boc - external message output" cr

	100 halt
} if

$1 load-keypair
constant private_key
constant old_public_key

$2 load-generate-keypair drop
constant new_public_key

"contract-address.addr" load-address
2constant contract_address

"contract-data.boc" file>B B>boc
constant contract_data

now 60 +
constant valid_until

<b
	b{01} s,
	false 1 i, b{000} s,
	b{100} s, contract_address addr,
	1 Gram* 4 / Gram,
	0 106 u,
	<b
		1 32 u,
		old_public_key B,
		new_public_key B,
	b> body,
b> constant out_replace_key_msg

<b
	contract_data seqno 32 u,
	valid_until 32 u,
	out_replace_key_msg ref,
b> constant payload

<b
	b{100} s,
	contract_address addr,
	payload <s s,
b> hashu constant signed_hash

signed_hash private_key ed25519_sign_uint
constant signature

<b
	signature B,
	payload <s s,
b> constant body

<b
	b{1000100} s,
	contract_address addr,
	0 Gram,
	b{00} s,
	body <s s,
b> constant msg_replace_key

msg_replace_key 2 boc+>B "msg-replace-key.boc" B>file
